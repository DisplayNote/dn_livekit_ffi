parameters:
- name: platform
  displayName: Target Platform
  type: string
- name: os
  displayName: Operating System
  type: string
- name: target
  displayName: Build Target
  type: string
- name: artifact
  displayName: Artifact Directory Name
  type: string
- name: arch
  displayName: Architecture
  type: string
- name: dylib
  displayName: Dynamic Library Path
  type: string
- name: jar
  displayName: Java Library Path
  type: string
- name: name
  displayName: Artifact Name
  type: string

steps:
  - task: Bash@3
    displayName: 'Prepare conan package (Unix for Android)'
    condition: and(succeeded(),  eq('${{ parameters.platform }}', 'android'))
    inputs:
      targetType: 'inline'
      script: |
        cp -n livekit-ffi/include/livekit_ffi.h "$(Pipeline.Workspace)/${{ parameters.artifact }}/include/livekit_ffi.h"
        cp -n livekit-ffi/conan_assets/conanfile.py "$(Pipeline.Workspace)/${{ parameters.artifact }}/conanfile.py"
        cd target/${{ parameters.target }}/release/
        mkdir -p $(Pipeline.Workspace)/${{ parameters.artifact }}/lib/android/${{ parameters.arch }}
        cp ${{ parameters.dylib }} ${{ parameters.jar }} $(Pipeline.Workspace)/${{ parameters.artifact }}/lib/android/${{ parameters.arch }}

  - task: PowerShell@2
    displayName: 'Zip artifact (Windows)'
    condition: and(succeeded(), eq('${{ parameters.os }}', 'windows-latest'))
    inputs:
      targetType: 'inline'
      script: |
        if (-not (Test-Path "$(Pipeline.Workspace)/${{ parameters.artifact }}/include/livekit_ffi.h")) {
          Copy-Item -Path "livekit-ffi/include/livekit_ffi.h" -Destination "$(Pipeline.Workspace)/${{ parameters.artifact }}/include/"
        }
        if (-not (Test-Path "$(Pipeline.Workspace)/${{ parameters.artifact }}/conanfile.py")) {
          Copy-Item -Path "livekit-ffi/conan_assets/conanfile.py" -Destination "$(Pipeline.Workspace)/${{ parameters.artifact }}/"
        }
        Set-Location "target/${{ parameters.target }}/release/"
        $null = New-Item -ItemType Directory -Path "$(Pipeline.Workspace)/${{ parameters.artifact }}/lib/windows" -Force
        Copy-Item -Path @("${{ parameters.dylib }}", "${{ parameters.jar }}") -Destination "$(Pipeline.Workspace)/${{ parameters.artifact }}/lib/windows"

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Pipeline.Workspace)/${{ parameters.artifact }}/'
      contents: '**'
      targetFolder: $(Build.ArtifactStagingDirectory)
    displayName: 'Copy results'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/${{ parameters.artifact }}'
      artifactName: dn-livekit-ffi
    displayName: 'Artifact | Publish'

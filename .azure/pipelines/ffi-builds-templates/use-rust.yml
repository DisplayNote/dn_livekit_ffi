parameters:
  - name: rustup_toolchain
    type: string
    default: stable
  - name: rustup_target
    type: string

steps:
 - pwsh: |
      # Verificar la instalaci칩n existente
      rustc --version
      cargo --version
      rustup --version

      # Asegurar que la ruta de Rust est치 en el PATH
      #$env:PATH += ";$env:USERPROFILE\.cargo\bin"
      #Write-Host "##vso[task.setvariable variable=PATH;]$env:PATH"

      # Establecer la toolchain predeterminada
      #rustup default stable-x86_64-pc-windows-msvc

      # Actualizar componentes
      #rustup update

      # Asegurar que el target est치 instalado
      rustup target add x86_64-pc-windows-msvc

      # Mostrar la configuraci칩n final
      rustup show
   displayName: Windows install rust
   condition: eq( variables['Agent.OS'], 'Windows_NT' )

 - task: PowerShell@2
   displayName: 'Set PATH for ALL shells'
   condition: eq(variables['Agent.OS'], 'Windows_NT')
   inputs:
     targetType: 'inline'
     script: |
       Write-Host "##vso[task.prependpath]$env:USERPROFILE\.cargo\bin"

 - script: |
     curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain ${{ parameters.rustup_toolchain }}
     echo "##vso[task.prependpath]$HOME/.cargo/bin"
   displayName: Install rust
   condition: ne( variables['Agent.OS'], 'Windows_NT' )

 - script: |
      rustup default stable
      rustup target add ${{ parameters.rustup_target }}
   displayName: Verify Rust installation
   condition: ne( variables['Agent.OS'], 'Windows_NT' )

 - script: |
      rustc --version
      cargo --version
      rustup --version
   displayName: Check installed rust version

 - pwsh: |
      rustc --version
      cargo --version
      rustup --version
      rustup default
   displayName: Check installed rust version

#  - pwsh: |
#       rustup default stable
#       rustup target add ${{ parameters.rustup_target }}
#    displayName: Verify Rust installation
#    condition: eq( variables['Agent.OS'], 'Windows_NT' )

parameters:
  - name: rustup_toolchain
    type: string
    default: stable
  - name: rustup_target
    type: string

steps:
 - bash: |
     TOOLCHAIN="${{ parameters.rustup_toolchain }}"
     TOOLCHAIN="${TOOLCHAIN:-$RUSTUP_TOOLCHAIN}"
     TOOLCHAIN="${TOOLCHAIN:-stable}"
     echo "##vso[task.setvariable variable=TOOLCHAIN;]$TOOLCHAIN"
   displayName: Set rust toolchain (Unix)
   condition: ne( variables['Agent.OS'], 'Windows_NT' )

 - powershell: |
    $TOOLCHAIN = "${{ parameters.rustup_toolchain }}"
    if (-not $TOOLCHAIN) { $TOOLCHAIN = $env:RUSTUP_TOOLCHAIN }
    if (-not $TOOLCHAIN) { $TOOLCHAIN = "stable" }
    Write-Host "##vso[task.setvariable variable=TOOLCHAIN]$TOOLCHAIN"
   displayName: Set Rust toolchain (Windows)
   condition: eq(variables['Agent.OS'], 'Windows_NT')

 - script: |
     curl -sSf -o rustup-init.exe https://win.rustup.rs
     rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
     echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
   displayName: Windows install rust
   condition: eq( variables['Agent.OS'], 'Windows_NT' )

 - script: |
     curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
     echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
   displayName: Install rust
   condition: ne( variables['Agent.OS'], 'Windows_NT' )

 - script: |
     rustup target add ${{ parameters.rustup_target }}
   displayName: Rustup target

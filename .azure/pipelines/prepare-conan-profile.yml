parameters:
- name: artifacts
  type: object
  default: []
- name: packageName
  type: string
- name: dependencies
  type: object
  default: []
- name: conanProfiles
  type: object
  default: []

stages:
  - stage: deploy_dn_develop
    dependsOn: ${{ parameters.dependencies }}
    displayName: 'DEPLOY | develop'
    condition: succeeded()
    jobs:
    - deployment: CreatePackageDevelop
      displayName: 'DEPLOY | develop'
      pool:
        #Using Microsoft-hosted agents
        #vmImage: 'ubuntu-22.04'
        #Using DN-hosted agent (Self hosted agent)
        #name: az-self-hosted-ubuntu2204
        #Using DN pool snapshot based of Self hosted agent
        name: agent-pool-ubuntu2204-vmss
      environment: 'conan-libs-dn-develop'
      strategy:
        runOnce:
          deploy:
            steps:

            - checkout: self
              clean: true
              submodules: recursive
              persistCredentials: true

            - ${{ each artifact in parameters.artifacts }}:
              - task: DownloadPipelineArtifact@2
                inputs:
                  artifactName: ${{ artifact }}
                  targetPath: '$(Build.ArtifactStagingDirectory)'
                displayName: 'Download artifact ${{ artifact }}'

            - template: common/python.yml@ci

            - template: common/conan/config.yml@ci

            - task: Bash@3
              displayName: 'Prepare conan package'
              condition: succeeded()
              inputs:
                targetType: 'inline'
                script: |
                  ls -l '$(Build.ArtifactStagingDirectory)'
                  cp $(Build.SourcesDirectory)/dn_livekit_ffi/livekit-ffi/conan_assets/conanfile.py '$(Build.ArtifactStagingDirectory)'
                  mkdir -p '$(Build.ArtifactStagingDirectory)/include'
                  cp $(Build.SourcesDirectory)/dn_livekit_ffi/livekit-ffi/include/livekit_ffi.h '$(Build.ArtifactStagingDirectory)/include/livekit_ffi.h'

            - ${{ each profile in parameters.conanProfiles }}:
              - template: common/conan/create.yml@ci
                parameters:
                  channel: 'dn/develop'
                  conanfile: '$(Build.ArtifactStagingDirectory)/conanfile.py'
                  packageName: ${{ parameters.packageName }}
                  buildFolder: $(Build.ArtifactStagingDirectory)
                  profile: ${{ profile }}
                  buildType: 'debug'
                  version: $(Build.BuildNumber)

              - template: common/conan/create.yml@ci
                parameters:
                  channel: 'dn/develop'
                  conanfile: '$(Build.ArtifactStagingDirectory)/conanfile.py'
                  packageName: ${{ parameters.packageName }}
                  buildFolder: $(Build.ArtifactStagingDirectory)
                  profile: ${{ profile }}
                  buildType: 'release'
                  version: $(Build.BuildNumber)

            - template: common/conan/upload.yml@ci
              parameters:
                channel: 'dn/develop'
                packageName: ${{ parameters.packageName }}
                version: $(Build.BuildNumber)
                skipUpload: ${{ startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}

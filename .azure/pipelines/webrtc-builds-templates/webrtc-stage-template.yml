# Azure DevOps Pipeline
parameters:
  - name: pool_name
    type: string
  - name: target_name
    type: string
  - name: arch
    type: string
  - name: os
    type: string
  - name: cmd
    type: string

variables:
  - name: python.version
    value: '3.9'

stages:
- stage: webrtc_${{ parameters.target_name }}_${{ parameters.arch }}
  displayName: Build WebRTC - ${{ parameters.target_name }}-${{ parameters.arch }}
  jobs:
  - job: BuildJob
    displayName: Build WebRTC
    pool:
      name: ${{ parameters.pool_name }}
    steps:
    - task: Bash@3
      displayName: Setup variables
      inputs:
        targetType: 'inline'
        script: |
          echo "Target Name: ${{ parameters.target_name }}"
          echo "Architecture: ${{ parameters.arch }}"
          DEFAULT_OUT=${{ parameters.target_name }}-${{ parameters.arch }}
          OUT=$DEFAULT_OUT-release
          echo "##vso[task.setvariable variable=OUT]$OUT"

    - task: Bash@3
      displayName: Info
      inputs:
        targetType: 'inline'
        script: |
          echo "OutName: $(OUT)"

    - task: UsePythonVersion@0
      displayName: Use Python $(python.version)
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - task: Bash@3
      displayName: Install setuptools
      inputs:
        targetType: 'inline'
        script: pip3 install setuptools

    - task: Bash@3
      displayName: Install linux dependencies
      condition: eq(parameters.os, 'ubuntu-latest')
      inputs:
        targetType: 'inline'
        script: |
          sudo apt update -y
          sudo apt install -y ninja-build pkg-config openjdk-11-jdk

    - task: Bash@3
      displayName: Install macos dependencies
      condition: eq(parameters.os, 'macos-13')
      inputs:
        targetType: 'inline'
        script: brew install ninja

    - task: PowerShell@2
      displayName: Install windows dependencies
      condition: eq(parameters.os, 'windows-latest')
      inputs:
        targetType: 'inline'
        script: |
          Invoke-WebRequest -Uri "https://github.com/ninja-build/ninja/releases/latest/download/ninja-win.zip" -OutFile ninja.zip
          Expand-Archive -Path ninja.zip -DestinationPath $(System.DefaultWorkingDirectory)\ninja
          $ninjaPath = "$(System.DefaultWorkingDirectory)\ninja"
          $currentPath = $env:PATH
          $newPath = "$ninjaPath;$currentPath"
          Write-Host "##vso[task.setvariable variable=PATH]$newPath"

    - task: Bash@3
      displayName: Print ninja version
      inputs:
        targetType: 'inline'
        script: ninja --version

    - checkout: self
      submodules: true

    - task: Bash@3
      displayName: Target OS
      inputs:
        targetType: 'inline'
        script: echo -e "\ntarget_os = [\"${{ parameters.target_name}}\"]" >> .gclient
        workingDirectory: $(System.DefaultWorkingDirectory)/webrtc-sys/libwebrtc

    - task: Bash@3
      displayName: Build WebRTC (Unix)
      condition: ne(parameters.os, 'windows-latest')
      inputs:
        targetType: 'inline'
        script: ${{ parameters.cmd }} --arch ${{ parameters.arch }} --profile release
        workingDirectory: $(System.DefaultWorkingDirectory)/webrtc-sys/libwebrtc

    - task: PowerShell@2
      displayName: Build WebRTC (Windows)
      condition: eq(parameters.os, 'windows-latest')
      inputs:
        targetType: 'inline'
        script: |
          $env:PATH = "$(System.DefaultWorkingDirectory)\ninja;$env:PATH"
          cmd /c "${{ parameters.cmd }} --arch ${{ parameters.arch }} --profile release"
        workingDirectory: $(System.DefaultWorkingDirectory)/webrtc-sys/libwebrtc

    - task: PublishPipelineArtifact@1
      displayName: Publish Artifact
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/webrtc-sys/libwebrtc/$(OUT)'
        artifact: build-folder
        publishLocation: 'pipeline'

    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(System.DefaultWorkingDirectory)/webrtc-sys/libwebrtc/$(OUT)
        contents: '**/*'
        targetFolder: $(Build.ArtifactStagingDirectory)
      displayName: 'PUBLISH | Copy results'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: webrtc-builds
      displayName: 'PUBLISH | Publish results'

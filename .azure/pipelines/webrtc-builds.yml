# Azure DevOps Pipeline

trigger:
  tags:
    include:
      - "v*"
  branches:
    exclude:
      - '*'

variables:
  - name: python.version
    value: '3.9'

stages:
- stage: build_webrtc
  displayName: Build WebRTC
  jobs:
  - job: BuildJob
    displayName: Build WebRTC
    strategy:
      matrix:
        win_x64:
          target_name: win
          os: windows-latest
          pool_name: agent-pool-windows2022-vmss
          cmd: build_windows.cmd
          arch: x64
        win_arm64:
          target_name: win
          os: windows-latest
          pool_name: agent-pool-windows2022-vmss
          cmd: build_windows.cmd
          arch: arm64
        android_arm64:
          target_name: android
          os: ubuntu-latest # Using ubuntu directly instead of buildjet
          cmd: ./build_android.sh
          pool_name: agent-pool-ubuntu2204-vmss
          arch: arm64
        android_arm:
          target_name: android
          os: ubuntu-latest # Using ubuntu directly instead of buildjet
          pool_name: agent-pool-ubuntu2204-vmss
          cmd: ./build_android.sh
          arch: arm
    pool:
      name: $(pool_name)
    steps:
    - task: Bash@3
      displayName: Setup variables
      inputs:
        targetType: 'inline'
        script: |
          DEFAULT_OUT=$(target_name)-$(target_arch)
          OUT='$DEFAULT_OUT'
          echo "##vso[task.setvariable variable=OUT]$OUT"
          echo "##vso[task.setvariable variable=ZIP]webrtc-$OUT.zip"

    - task: Bash@3
      displayName: Info
      inputs:
        targetType: 'inline'
        script: |
          echo "OutName: $(OUT)"
          echo "OutZip: $(ZIP)"

    - task: UsePythonVersion@0
      displayName: Use Python $(python.version)
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - task: Bash@3
      displayName: Install setuptools
      inputs:
        targetType: 'inline'
        script: pip3 install setuptools

    - task: Bash@3
      displayName: Install linux dependencies
      condition: eq(variables.os, 'ubuntu-latest')
      inputs:
        targetType: 'inline'
        script: |
          sudo apt update -y
          sudo apt install -y ninja-build pkg-config openjdk-11-jdk

    - task: Bash@3
      displayName: Install macos dependencies
      condition: eq(variables.os, 'macos-13')
      inputs:
        targetType: 'inline'
        script: brew install ninja

    - task: PowerShell@2
      displayName: Install windows dependencies
      condition: eq(variables.os, 'windows-latest')
      inputs:
        targetType: 'inline'
        script: |
          Invoke-WebRequest -Uri "https://github.com/ninja-build/ninja/releases/latest/download/ninja-win.zip" -OutFile ninja.zip
          Expand-Archive -Path ninja.zip -DestinationPath $(System.DefaultWorkingDirectory)\ninja
          $ninjaPath = "$(System.DefaultWorkingDirectory)\ninja"
          $currentPath = $env:PATH
          $newPath = "$ninjaPath;$currentPath"
          Write-Host "##vso[task.setvariable variable=PATH]$newPath"

    - task: Bash@3
      displayName: Print ninja version
      inputs:
        targetType: 'inline'
        script: ninja --version

    - checkout: self
      submodules: true

    - task: Bash@3
      displayName: Target OS
      inputs:
        targetType: 'inline'
        script: echo -e "\ntarget_os = [\"$(target_name)\"]" >> .gclient
        workingDirectory: $(System.DefaultWorkingDirectory)/webrtc-sys/libwebrtc

    - task: Bash@3
      displayName: Build WebRTC
      condition: ne(variables.os, 'windows-latest')
      inputs:
        targetType: 'inline'
        script: $(cmd) --arch $(arch) --profile release
        workingDirectory: $(System.DefaultWorkingDirectory)/webrtc-sys/libwebrtc

    - task: CmdLine@2
      condition: eq(variables.os, 'windows-latest')
      inputs:
        script: $(cmd) --arch $(arch) --profile release
        workingDirectory: $(System.DefaultWorkingDirectory)/webrtc-sys/libwebrtc

    - task: Bash@3
      displayName: Zip artifact (Unix)
      condition: ne(variables.os, 'windows-latest')
      inputs:
        targetType: 'inline'
        script: |
          cd $(System.DefaultWorkingDirectory)/webrtc-sys/libwebrtc
          zip $(System.DefaultWorkingDirectory)/$(ZIP) $(OUT) -r

    - task: PowerShell@2
      displayName: Zip artifact (Windows)
      condition: eq(variables.os, 'windows-latest')
      inputs:
        targetType: 'inline'
        script: Compress-Archive -Path $(System.DefaultWorkingDirectory)\webrtc-sys\libwebrtc\$(OUT) -DestinationPath $(System.DefaultWorkingDirectory)\$(ZIP)

    - task: PublishPipelineArtifact@1
      displayName: Publish Artifact
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/$(ZIP)'
        artifact: webrtc-builds
        publishLocation: 'pipeline'

- template: ffi-builds.yml

